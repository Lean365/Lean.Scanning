<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="uiImageButton3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>